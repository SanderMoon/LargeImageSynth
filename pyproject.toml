[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tiled-dummy-gen"
version = "0.1.0"
description = "A synthetic data generation library for creating tiled dummy datasets with image embeddings"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "Sander Moonemans", email = "sander.moonemans@example.com"}
]
keywords = ["synthetic-data", "machine-learning", "computer-vision", "embeddings"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

# Core dependencies
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "pillow>=8.0.0",
    "torch>=1.9.0",
    "transformers>=4.15.0",
    "scikit-learn>=1.0.0",
    "h5py>=3.6.0",
    "matplotlib>=3.5.0",
]

# Optional dependencies for different use cases
[project.optional-dependencies]
cli = ["click>=8.0.0", "rich>=10.0.0"]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=2.15.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]
all = [
    "tiled-dummy-gen[cli,dev,docs]",
]

# Entry points for CLI
[project.scripts]
tiled-dummy-gen = "tiled_dummy_gen.cli:main"

[project.urls]
Homepage = "https://github.com/sandermoonemans/TiledDummyGen"
Repository = "https://github.com/sandermoonemans/TiledDummyGen"
Issues = "https://github.com/sandermoonemans/TiledDummyGen/issues"

[tool.setuptools.packages.find]
where = ["src"]
include = ["tiled_dummy_gen*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
"tiled_dummy_gen" = ["*.json", "*.yaml", "*.yml"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# Ruff configuration
[tool.ruff]
target-version = "py312"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

# MyPy configuration
[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "transformers.*",
    "PIL.*",
    "h5py.*",
    "matplotlib.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]